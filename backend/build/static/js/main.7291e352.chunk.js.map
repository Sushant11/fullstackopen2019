{"version":3,"sources":["components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","components/App.js","index.js"],"names":["PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Persons","person","handleDelete","key","id","name","number","onClick","baseUrl","axios","get","newObject","post","delete","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNubmer","errorMessage","setErrorMessage","useEffect","personService","then","response","data","e","preventDefault","personObject","length","find","item","alert","concat","target","map","window","confirm","document","location","reload","ReactDOM","render","getElementById"],"mappings":"qMAiCeA,EA/BI,SAAAC,GACjB,OACE,0BAAMC,SAAUD,EAAME,WACpB,+BACE,+BACA,4BACE,qCACA,4BACE,2BAAOC,MAAOH,EAAMI,QAASC,SAAUL,EAAMM,qBAGjD,4BACE,yCACA,4BACE,2BACEH,MAAOH,EAAMO,UACbF,SAAUL,EAAMQ,uBAItB,4BACE,4BACE,4BAAQC,KAAK,UAAb,aCXGC,EAXC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACzB,OACE,6BACE,wBAAIC,IAAKF,EAAOG,IACbH,EAAOI,KADV,MACmBJ,EAAOK,OAAQ,IAChC,4BAAQC,QAASL,GAAjB,a,gBCNFM,EAAU,eAkBD,EAhBA,WACb,OAAOC,IAAMC,IAAIF,IAeJ,EAZA,SAAAG,GACb,OAAOF,IAAMG,KAAKJ,EAASG,IAWd,EAJC,SAAAP,GACd,OAAOK,IAAMI,OAAN,UAAgBL,EAAhB,YAA2BJ,KCDrBU,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACK,KAIP,yBAAKC,UAAU,SACZD,ICuEME,EA3EH,SAAA3B,GAAU,IAAD,EACW4B,mBAAS,IADpB,mBACZC,EADY,KACHC,EADG,OAEWF,mBAAS,IAFpB,mBAEZxB,EAFY,KAEH2B,EAFG,OAGeH,mBAAS,IAHxB,mBAGZrB,EAHY,KAGDyB,EAHC,OAIqBJ,mBAAS,MAJ9B,mBAIZK,EAJY,KAIEC,EAJF,KAMnBC,qBAAU,WACRC,IAAuBC,MAAK,SAAAC,GAAQ,OAAIR,EAAWQ,EAASC,WAC3D,IAkDH,OACE,6BACE,kBAAC,EAAD,CAAcd,QAASQ,IACvB,yCACA,kBAAC,EAAD,CACE/B,UArDY,SAAAsC,GAChBA,EAAEC,iBAEF,IAAMC,EAAe,CACnB5B,GAAIe,EAAQc,OAAS,EACrB5B,KAAMX,EACNY,OAAQT,GAENsB,EAAQe,MAAK,SAAAC,GAAI,OAAIA,EAAK9B,OAASX,MACrC0C,MAAM,GAAD,OAAI1C,EAAJ,gCACL2B,EAAW,KAEXK,EAAqBM,GAAcL,MAAK,SAAAC,GACtCR,EAAWD,EAAQkB,OAAOT,EAASC,OACnCR,EAAW,IACXC,EAAa,IACbE,EAAgB,aAsChB9B,QAASA,EACTG,UAAWA,EACXC,mBAhCqB,SAAAgC,GACzBR,EAAaQ,EAAEQ,OAAO7C,QAgClBG,iBApCmB,SAAAkC,GACvBT,EAAWS,EAAEQ,OAAO7C,UAqClB,uCAnBF0B,EAAQoB,KAAI,SAAAtC,GAAM,OAChB,kBAAC,EAAD,CACEE,IAAKF,EAAOG,GACZH,OAAQA,EACRC,aAAc,kBAhBCE,EAgBkBH,EAAOG,SAdlC,IADFoC,OAAOC,QAAP,iBAAyBrC,EAAzB,OAENsB,EAAsBtB,GAAIuB,MAAK,SAAAC,GAE7B,OADAQ,MAAM,GAAD,OAAIhC,EAAJ,YAAkBsC,SAASC,SAASC,UAClChB,EAASC,SALD,IAAAzB,UCvCvByC,IAASC,OAAO,kBAAC,EAAD,MAASJ,SAASK,eAAe,U","file":"static/js/main.7291e352.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst PersonForm = props => {\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <table>\r\n        <tbody>\r\n        <tr>\r\n          <td>Name:</td>\r\n          <td>\r\n            <input value={props.newName} onChange={props.handleNameChange} />\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>Phone No:</td>\r\n          <td>\r\n            <input\r\n              value={props.newNumber}\r\n              onChange={props.handleNumberChange}\r\n            />\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <button type=\"submit\">Add</button>\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ person, handleDelete }) => {\r\n  return (\r\n    <div>\r\n      <li key={person.id}>\r\n        {person.name} : {person.number}{\" \"}\r\n        <button onClick={handleDelete}>Delete</button>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl);\r\n};\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject);\r\n};\r\n\r\nconst deleted = id => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nexport default { getAll, create, update, deleted };\r\n","import React from 'react';\r\nimport '../index.css'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification;","import React, { useState, useEffect } from \"react\";\r\nimport PersonForm from \"./PersonForm\";\r\nimport Persons from \"./Persons\";\r\nimport personService from \"../services/persons\";\r\nimport Notification from './Notification'\r\n\r\nconst App = props => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNubmer] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    personService.getAll().then(response => setPersons(response.data));\r\n  }, []);\r\n\r\n  const addPerson = e => {\r\n    e.preventDefault();\r\n\r\n    const personObject = {\r\n      id: persons.length + 1,\r\n      name: newName,\r\n      number: newNumber\r\n    };\r\n    if (persons.find(item => item.name === newName)) {\r\n      alert(`${newName} already added in the List.`);\r\n      setNewName(\"\");\r\n    } else {\r\n      personService.create(personObject).then(response => {\r\n        setPersons(persons.concat(response.data));\r\n        setNewName(\"\");\r\n        setNewNubmer(\"\");\r\n        setErrorMessage('Added')\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleNameChange = e => {\r\n    setNewName(e.target.value);\r\n  };\r\n  const handleNumberChange = e => {\r\n    setNewNubmer(e.target.value);\r\n  };\r\n\r\n  const handleDelete = id => {\r\n    var r = window.confirm(`Delete ${id}?`);\r\n    if (r === true) {\r\n      personService.deleted(id).then(response => {\r\n        alert(`${id} Deleted`, document.location.reload());\r\n        return response.data;\r\n      });\r\n    } else {\r\n    }\r\n  };\r\n\r\n  const rows = () =>\r\n    persons.map(person => (\r\n      <Persons\r\n        key={person.id}\r\n        person={person}\r\n        handleDelete={() => handleDelete(person.id)}\r\n      />\r\n    ));\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={errorMessage} />\r\n      <h2>Phonebook</h2>\r\n      <PersonForm\r\n        addPerson={addPerson}\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        handleNumberChange={handleNumberChange}\r\n        handleNameChange={handleNameChange}\r\n      />\r\n      <h2>Numbers</h2>\r\n      {rows()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}