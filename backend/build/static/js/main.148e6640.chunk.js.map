{"version":3,"sources":["components/PersonForm.js","components/Login.js","components/Persons.js","services/persons.js","services/login.js","components/Notification.js","components/App.js","index.js"],"names":["PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Login","handleLogin","username","name","target","setUsername","password","setPassword","Persons","person","handleDelete","key","id","number","onClick","baseUrl","token","axios","get","newObject","a","async","config","headers","Authorization","post","response","data","delete","newToken","credentials","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNubmer","errorMessage","setErrorMessage","user","setUser","useEffect","personService","then","event","preventDefault","loginService","setTimeout","e","personObject","length","find","item","alert","concat","map","window","confirm","document","location","reload","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.148e6640.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst PersonForm = props => {\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <table>\r\n        <tbody>\r\n        <tr>\r\n          <td>Name:</td>\r\n          <td>\r\n            <input value={props.newName} onChange={props.handleNameChange} />\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>Phone No:</td>\r\n          <td>\r\n            <input\r\n              value={props.newNumber}\r\n              onChange={props.handleNumberChange}\r\n            />\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <button type=\"submit\">Add</button>\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Login =  props => {\r\n  return (\r\n    <form onSubmit={props.handleLogin}>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td>Username</td>\r\n            <td>\r\n              {\" \"}\r\n              <input\r\n                type=\"text\"\r\n                value={props.username}\r\n                name=\"Username\"\r\n                onChange={({ target }) => props.setUsername(target.value)}\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>Password</td>\r\n            <td>\r\n              <input\r\n                type=\"password\"\r\n                value={props.password}\r\n                name=\"Password\"\r\n                onChange={({ target }) => props.setPassword(target.value)}\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <button type=\"submit\">login</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ person, handleDelete }) => {\r\n  return (\r\n    <div>\r\n      <li key={person.id}>\r\n        {person.name} : {person.number}{\" \"}\r\n        <button onClick={handleDelete}>Delete</button>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl);\r\n};\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject);\r\n};\r\n\r\nconst deleted = id => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nexport default { getAll, create, update, deleted, setToken };\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React from 'react';\r\nimport '../index.css'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification;","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport PersonForm from \"./PersonForm\";\r\nimport Login from \"./Login\";\r\nimport Persons from \"./Persons\";\r\nimport personService from \"../services/persons\";\r\nimport loginService from \"../services/login\";\r\nimport Notification from \"./Notification\";\r\n\r\nconst App = props => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNubmer] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    personService.getAll().then(response => setPersons(response.data));\r\n  }, []);\r\n\r\n  const addPerson = e => {\r\n    e.preventDefault();\r\n\r\n    const personObject = {\r\n      id: persons.length + 1,\r\n      name: newName,\r\n      number: newNumber\r\n    };\r\n    if (persons.find(item => item.name === newName)) {\r\n      alert(`${newName} already added in the List.`);\r\n      setNewName(\"\");\r\n    } else {\r\n      personService.create(personObject).then(response => {\r\n        setPersons(persons.concat(response.data));\r\n        setNewName(\"\");\r\n        setNewNubmer(\"\");\r\n        setErrorMessage(\"Added\");\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleNameChange = e => {\r\n    setNewName(e.target.value);\r\n  };\r\n  const handleNumberChange = e => {\r\n    setNewNubmer(e.target.value);\r\n  };\r\n\r\n  const handleDelete = id => {\r\n    var r = window.confirm(`Delete ${id}?`);\r\n    if (r === true) {\r\n      personService.deleted(id).then(response => {\r\n        alert(`${id} Deleted`, document.location.reload());\r\n        return response.data;\r\n      });\r\n    } else {\r\n    }\r\n  };\r\n\r\n  const handleLogin = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const user = await loginService.login({\r\n        username,\r\n        password\r\n      });\r\n\r\n      personService.setToken(user.token)\r\n      setUser(user);\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n    } catch (exception) {\r\n      setErrorMessage(\"Wrong credentials\");\r\n      setTimeout(() => {\r\n        setErrorMessage(null);\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  const rows = () =>\r\n    persons.map(person => (\r\n      <Persons\r\n        key={person.id}\r\n        person={person}\r\n        handleDelete={() => handleDelete(person.id)}\r\n      />\r\n    ));\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={errorMessage} />\r\n     \r\n\r\n      {user === null ?\r\n      <Fragment> <h4>Login</h4> \r\n      <Login \r\n      username={username}\r\n      password={password}\r\n      setUsername={setUsername}\r\n      setPassword={setPassword}\r\n      handleLogin={handleLogin}\r\n      /> </Fragment>\r\n     :\r\n     <Fragment>\r\n     <h2>Phonebook</h2>\r\n     <p>{user.name} logged in</p>\r\n     <PersonForm\r\n       addPerson={addPerson}\r\n       newName={newName}\r\n       newNumber={newNumber}\r\n       handleNumberChange={handleNumberChange}\r\n       handleNameChange={handleNameChange}\r\n     />\r\n     <h2>Numbers</h2>\r\n     {rows()}\r\n     </Fragment>\r\n    }\r\n   \r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}